<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInitd7dbaee72d5dbcf7d7035e4daa46e1d3
=======
class ComposerAutoloaderIniteff4e95c8d46f9f2455448801d7e172a
>>>>>>> 45dc6ca738b264e7d01223238dd7755faf0ba382
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInitd7dbaee72d5dbcf7d7035e4daa46e1d3', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitd7dbaee72d5dbcf7d7035e4daa46e1d3', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderIniteff4e95c8d46f9f2455448801d7e172a', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderIniteff4e95c8d46f9f2455448801d7e172a', 'loadClassLoader'));
>>>>>>> 45dc6ca738b264e7d01223238dd7755faf0ba382

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $map = require __DIR__ . '/autoload_psr4.php';
        foreach ($map as $namespace => $path) {
            $loader->setPsr4($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        $includeFiles = require __DIR__ . '/autoload_files.php';
        foreach ($includeFiles as $fileIdentifier => $file) {
<<<<<<< HEAD
            composerRequired7dbaee72d5dbcf7d7035e4daa46e1d3($fileIdentifier, $file);
=======
            composerRequireeff4e95c8d46f9f2455448801d7e172a($fileIdentifier, $file);
>>>>>>> 45dc6ca738b264e7d01223238dd7755faf0ba382
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequired7dbaee72d5dbcf7d7035e4daa46e1d3($fileIdentifier, $file)
=======
function composerRequireeff4e95c8d46f9f2455448801d7e172a($fileIdentifier, $file)
>>>>>>> 45dc6ca738b264e7d01223238dd7755faf0ba382
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
